import WinningHand from '../hand/WinningHand';
import FaanCalculationConfig from './FaanCalculationConfig';
import Hand from '../hand/Hand';
import FaanCalculationDetail from './FaanCalculationDetail';
declare type CalculationResult = {
    value: number | 'âˆž';
    details: FaanCalculationDetail[];
};
/**
 * This class provides the static method that calculates the Faan value of a WinningHand.
 */
export default class FaanCalculator {
    private static language;
    /**
     * The Faan value of threshold of a valid winning hand.
     */
    private static THRESHOLD_OF_VALID_WINNING_HAND;
    /**
     * The maximum Faan value.
     */
    /**
     * The dictionary that maps the Faan value of different types of WinningHand.
     */
    private static readonly FAAN_MAP;
    /**
     * The dictionary that maps the additional Faan value of different winning conditions.
     */
    private static readonly ADDITIONAL_FAAN_MAP;
    /**
     * Access the static Faan value threshold of FaanCalculator.
     * @returns {number} the static Faan value threshold of FaanCalculator.
     */
    static getThresholdFaanValue(): number;
    /**
     * Mutate the static Faan value threshold of FaanCalculator.
     * @param value the new static Faan value threshold of FaanCalculator.
     */
    static setThresholdFaanValue(value: number): void;
    /**
     * Access the static maximum Faan value of FaanCalculator.
     * @returns {number} the static maximum Faan value of FaanCalculator.
     */
    /**
     * Mutate the static maximum Faan value of FaanCalculator.
     * @param value the new static maximum Faan value of FaanCalculator.
     */
    static setLanguage(languageInput: 'en' | 'zh'): void;
    /**
     * Calculate the Faan value of the inputWinningHand.
     * @param inputWinningHand the WinningHand of which the Faan value has to be calculated.
     * @param config configuration for the calculation of the Faan value.
     * @returns {CalculationResult} the Faan value.
     */
    static calculate(inputWinningHand: WinningHand | Hand, config?: FaanCalculationConfig): CalculationResult;
    private static hasPongOrKong;
    private static calculateFaanFromExtraTiles;
    /**
     * Determine if the inputWinningHand reaches the maximum Faan value.
     * @param inputWinningHand the WinningHand to be evaluated.
     * @returns {boolean} true if the inputWinningHand reaches the maximum Faan value.
     */
    private static hasMaxFaan;
}
export {};
