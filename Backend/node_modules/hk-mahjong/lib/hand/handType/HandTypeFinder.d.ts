import isAllKongs from './isAllKongs';
import isOrphans from './isOrphans';
import isNineGates from './isNineGates';
import isAllHonors from './isAllHonors';
import isGreatDragon from './isGreatDragon';
import isSmallWinds from './isSmallWinds';
import isGreatWinds from './isGreatWinds';
import isSmallDragon from './isSmallDragon';
import isCommonHand from './isCommonHand';
import isAllInTriplets from './isAllInTriplets';
import isAllOneSuit from './isAllOneSuit';
import isMixedOneSuit from './isMixedOneSuit';
import isKaanKaanHand from './isKaanKaanHand';
import isMixedOrphans from './isMixedOrphans';
import isEightImmortalsCrossingTheSea from './isEightImmortalsCrossingTheSea';
import isFlowerHand from './isFlowerHand';
import { isThirteenOrphansAsWinningHand } from './isThirteenOrphans';
import isWinByDoubleKong from './isWinByDoubleKong';
/**
 * This class includes static methods that help identify if a WinningHand belongs to any particular type of high-scoring hands.
 */
export default class HandTypeFinder {
    static isThirteenOrphansAsWinningHand: typeof isThirteenOrphansAsWinningHand;
    static isAllKongs: typeof isAllKongs;
    static isOrphans: typeof isOrphans;
    static isNineGates: typeof isNineGates;
    static isAllHonors: typeof isAllHonors;
    static isGreatDragon: typeof isGreatDragon;
    static isSmallWinds: typeof isSmallWinds;
    static isGreatWinds: typeof isGreatWinds;
    static isSmallDragon: typeof isSmallDragon;
    static isCommonHand: typeof isCommonHand;
    static isAllInTriplets: typeof isAllInTriplets;
    static isAllOneSuit: typeof isAllOneSuit;
    static isMixedOneSuit: typeof isMixedOneSuit;
    static isKaanKaanHand: typeof isKaanKaanHand;
    static isEightImmortalsCrossingTheSea: typeof isEightImmortalsCrossingTheSea;
    static isFlowerHand: typeof isFlowerHand;
    static isMixedOrphans: typeof isMixedOrphans;
    static isWinByDoubleKong: typeof isWinByDoubleKong;
}
