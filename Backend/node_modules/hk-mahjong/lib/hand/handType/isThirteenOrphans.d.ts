import Meld from '../../meld/Meld';
import Tile from '../../tile/Tile';
import WinningHand from '../WinningHand';
/**
 * Determine if the array of Tiles is able to form ThirteenOrphans.
 * @param inputTiles input array of Tiles.
 * @returns true if the the array of Tiles could form ThirteenOrphans.
 */
export declare function isThirteenOrphansAsTilesArray(inputTiles: Tile[]): boolean;
/**
 * Convert the array of Tiles to a Meld.
 * @param inputTiles input array of Tiles.
 * @returns {Meld} a single Meld consisting of 14 Tiles.
 */
export declare function convertThirteenOrphansToMeld(inputTiles: Tile[]): Meld;
/**
 * Sort Tiles in an array, so that the Tiles to form the eyes could be arranged side by side.  (e.g. 🀀🀁🀂🀃🀄🀅🀆🀇🀏🀙🀡🀐🀘🀄 --> 🀀🀁🀂🀃🀄🀄🀅🀆🀇🀏🀙🀡🀐🀘)
 * @param inputTiles input array of Tiles.
 * @returns {Tile []} a sorted array of Tiles of a ThirteenOrphans.
 */
export declare function sortTilesInThirteenOrphans(inputTiles: Tile[]): Tile[];
/**
 * Determine if a Meld is a ThirteenOrphans.
 * @param inputMeld Meld to be evaluated.
 * @returns {boolean} true if the Meld is a ThirteenOrphans.
 */
export declare function isThirteenOrphansAsMeld(inputMeld: Meld): boolean;
/**
 * Determine if a WinningHand is a ThirteenOrphans.
 * @param inputWinningHand WinningHand to be evaluated.
 * @returns {boolean} true if the WinningHand is a ThirteenOrphans.
 */
export declare function isThirteenOrphansAsWinningHand(inputWinningHand: WinningHand): boolean;
